{
  "requirements": [
    "Step 1: Parse command line arguments to get the configuration file path, model directory, and fusion method (/workspace/opencood/tools/train.py:20-29)",
    "Step 2: Load the YAML configuration file and build the dataset for training and validation (/workspace/opencood/tools/train.py:34-40)",
    "Step 3: Create data loaders for training and validation datasets (/workspace/opencood/tools/train.py:42-57)",
    "Step 4: Initialize the model based on the configuration (/workspace/opencood/tools/train.py:60-61)",
    "Step 5: Set up the loss function, optimizer, and learning rate scheduler (/workspace/opencood/tools/train.py:68-88)",
    "Step 6: Train the model for the specified number of epochs, with periodic validation and checkpointing (/workspace/opencood/tools/train.py:102-179)",
    "Step 7: For the complete HEAL model, train the base model (m1) first using the stage1 configuration (/workspace/opencood/tools/train.py:102-179)",
    "Step 8: Train the other agent types (m2, m3, m4) using the stage2 configurations (/workspace/opencood/tools/train.py:102-179)",
    "Step 9: Merge the trained models using the heal_tools.py script (/workspace/opencood/tools/heal_tools.py:115-130)",
    "Step 10: Evaluate the model performance using inference_heter_in_order.py (/workspace/opencood/tools/inference_heter_in_order.py:61-179)",
    "Step 11: Calculate and report the AP50 and AP70 metrics for the model (/workspace/opencood/tools/inference_heter_in_order.py:287-288)"
  ],
  "agent_instructions": "Your task is to implement a system for training and evaluating the HEAL (HEterogeneous Agent Learning) framework for cooperative perception on the OPV2V-H dataset. The system should support training models with different components enabled/disabled for an ablation study.\n\nThe system should include:\n\n1. A training script that:\n   - Takes a configuration file path as input\n   - Loads the dataset and creates data loaders\n   - Sets up the model, loss function, optimizer, and learning rate scheduler\n   - Trains the model for a specified number of epochs\n   - Periodically validates the model and saves checkpoints\n\n2. A model merging tool that:\n   - Can combine models trained for different agent types\n   - Takes paths to the trained models and an output directory as input\n   - Creates a merged model that can handle heterogeneous inputs\n\n3. An evaluation script that:\n   - Takes a model directory and fusion method as input\n   - Loads the test dataset and the trained model\n   - Runs inference on the test set\n   - Calculates and reports AP50 and AP70 metrics\n\nThe HEAL framework consists of three main components that should be configurable:\n\n1. Multiscale pyramid module: A feature extraction approach that operates at multiple scales\n2. Foreground supervision: A technique to focus learning on foreground objects\n3. Backward alignment: A method to align features from different agent types\n\nFor the ablation study, you need to support four configurations:\n1. Baseline: All components disabled\n2. Pyramid only: Only multiscale pyramid enabled\n3. Pyramid + Foreground: Both multiscale pyramid and foreground supervision enabled\n4. Complete HEAL: All components enabled\n\nThe evaluation should be performed with a fixed agent type configuration as specified in the OPV2V-H dataset.",
  "masked_source": [
    "/workspace/opencood/tools/train.py",
    "/workspace/opencood/tools/heal_tools.py",
    "/workspace/opencood/tools/inference_heter_in_order.py"
  ]
}