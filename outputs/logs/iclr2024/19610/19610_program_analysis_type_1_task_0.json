{
  "requirements": [
    "Step 1: Set up distributed training environment with PyTorch's distributed module, configuring parameters like number of nodes, node rank, master address, and processes per node (/workspace/tools/dist_train.sh:10-16)",
    "Step 2: Launch the training script with the specified configuration file, setting a fixed random seed and using PyTorch as the launcher (/workspace/tools/dist_train.sh:17-20)",
    "Step 3: Configure the TopoMLP model with ResNet-50 backbone, including FPN neck, lane detection head, traffic element detection head, and topology heads for lane-lane and lane-traffic element relationships (/workspace/projects/configs/topomlp_setA_r50_wo_yolov8.py:10-192)",
    "Step 4: Set up image normalization and data processing pipelines for both training and testing (/workspace/projects/configs/topomlp_setA_r50_wo_yolov8.py:194-245)",
    "Step 5: Configure the OpenLaneV2SubsetA dataset with appropriate data roots and collections for training and validation (/workspace/projects/configs/topomlp_setA_r50_wo_yolov8.py:247-279)",
    "Step 6: Set up the AdamW optimizer with learning rate of 2e-4, reduced learning rate for backbone, and weight decay of 1e-2 (/workspace/projects/configs/topomlp_setA_r50_wo_yolov8.py:281-289)",
    "Step 7: Configure learning rate schedule with cosine annealing policy, linear warmup, and appropriate warmup parameters (/workspace/projects/configs/topomlp_setA_r50_wo_yolov8.py:291-296)",
    "Step 8: Set up training for 24 epochs with evaluation at the end (/workspace/projects/configs/topomlp_setA_r50_wo_yolov8.py:298-299)",
    "Step 9: Configure logging and checkpointing during training (/workspace/projects/configs/topomlp_setA_r50_wo_yolov8.py:301-316)",
    "Step 10: Set up distributed testing environment with PyTorch's distributed launch (/workspace/tools/dist_test.sh:11-17)",
    "Final Step: Launch the testing script with the specified configuration file, checkpoint file, and evaluation metrics (/workspace/tools/dist_test.sh:18-22)"
  ],
  "agent_instructions": "Your task is to implement scripts for training and evaluating a TopoMLP model on the OpenLane-V2 dataset. The model is designed for autonomous driving perception, specifically for lane detection, traffic element detection, and topology relationship prediction.\n\n1. Create a distributed training script that:\n   - Takes a configuration file path, number of GPUs, and optional arguments as inputs\n   - Sets up PyTorch distributed training environment\n   - Launches the training process with appropriate parameters\n\n2. Create a distributed testing script that:\n   - Takes a configuration file path, checkpoint file path, number of GPUs, and optional arguments as inputs\n   - Sets up PyTorch distributed testing environment\n   - Launches the evaluation process with appropriate parameters\n\n3. Create a configuration file for the TopoMLP model with the following components:\n   - Model architecture using ResNet-50 backbone\n   - Feature Pyramid Network (FPN) neck\n   - Lane detection head with transformer decoder\n   - Traffic element detection head with deformable DETR transformer\n   - Topology heads for lane-lane and lane-traffic element relationships\n   - Data processing pipelines for training and testing\n   - Dataset configuration for OpenLaneV2SubsetA\n   - AdamW optimizer with appropriate learning rates\n   - Cosine annealing learning rate schedule with warmup\n   - Training for 24 epochs with evaluation at the end\n\nThe model should be trained on the OpenLane-V2 subset A dataset and evaluated using metrics including DETl (lane detection), DETt (traffic element detection), TOPll (lane-lane topology), TOPlt (lane-traffic element topology), and the overall OLS score.",
  "masked_source": [
    "/workspace/tools/dist_train.sh",
    "/workspace/tools/dist_test.sh",
    "/workspace/projects/configs/topomlp_setA_r50_wo_yolov8.py"
  ]
}