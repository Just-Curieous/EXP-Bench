{
    "source": [
        "/workspace/examples/test_all_schedules.sh"
    ],
    "usage_instructions": "To compare the bubble rates of different scheduling algorithms (ZB-2p, 1F1B, 1F1B-I, ZB-H1, ZB-H2) across different model scales and microbatch counts:\n\n1. Modify the test_all_schedules.sh script to include the model configurations from Table 3 (1.5B, 6.2B, 14.6B, and 28.3B parameters) by adjusting the HIDDEN_SIZE, ATTENTION_HEADS, and LAYERS variables.\n\n2. For each model configuration, set the appropriate PIPELINE_SIZE (number of pipeline stages) and test with different MICRO_BATCH_SIZE values (e.g., 24, 32, 64).\n\n3. Make sure all the scheduling methods are uncommented in the 'methods' array (lines 10-19): \"1f1b\", \"1f1b-interleaved\" (for 1F1B-I), \"zb\" (for ZB-2p), and add \"zb-h1\" and \"zb-h2\" for the handcrafted schedules.\n\n4. Run the script with: `bash examples/test_all_schedules.sh`\n\n5. The script will execute each scheduling method with the specified configuration and output logs to the ./logs directory.\n\n6. The bubble rates can be extracted from the logs by looking for the throughput and execution time metrics, which can be used to calculate the bubble rate using the formula: bubble rate = (cost - m*(TF+TB+TW)) / cost.\n\nNote: The script already enables the zero bubble scheduling mechanism through the appropriate flags (--zero-bubble-v-schedule, --enable-zero-bubble, etc.) as required in the experiment question."
}