{
    "source": [
        "/workspace/examples/test_all_schedules.sh",
        "/workspace/examples/pretrain_zero_bubble.sh",
        "/workspace/tools/viz_nsys_events.py"
    ],
    "usage_instructions": "To compare ZB-1p and ZB-H1 scheduling methods under memory constraints, follow these steps:\n\n1. First, run the ZB-1p schedule using the test_all_schedules.sh script with appropriate parameters:\n   ```\n   export PIPELINE_SIZE=8  # For 8 pipeline stages\n   export MICRO_BATCH_SIZE=24  # Try with 24, 32, and 64 microbatches\n   export ENABLE_ZERO_BUBBLE=1  # Enable Zero Bubble\n   export ZERO_BUBBLE_MEM_LIMIT=$((1 * $PIPELINE_SIZE))  # Set memory limit to 1x pipeline size for ZB-1p\n   bash examples/test_all_schedules.sh\n   ```\n\n2. Then, run the ZB-H1 schedule with identical memory constraints:\n   ```\n   export PIPELINE_SIZE=8  # For 8 pipeline stages\n   export MICRO_BATCH_SIZE=24  # Try with 24, 32, and 64 microbatches\n   export SYNC_OPTIMIZER=1  # Enable synchronous optimizer for ZB-H1\n   export ENABLE_ZERO_BUBBLE=1  # Enable Zero Bubble\n   export ZERO_BUBBLE_MEM_LIMIT=$((1 * $PIPELINE_SIZE))  # Set memory limit to 1x pipeline size for ZB-H1\n   export EXTRA_OPTIONS=\"--zero-bubble-v-schedule-mem-setup half\"  # Set memory setup to half for controlled memory\n   bash examples/test_all_schedules.sh\n   ```\n\n3. After running both configurations, analyze the logs to extract the bubble rates and execution times:\n   ```\n   # Process the nsys profiling data to visualize and analyze the schedules\n   python tools/viz_nsys_events.py -i \"logs/test/zb.json\" -o zb_1p_analysis.svg -n 2 -w 1000\n   python tools/viz_nsys_events.py -i \"logs/test/zbv-half.json\" -o zb_h1_analysis.svg -n 2 -w 1000\n   ```\n\n4. Calculate the bubble rates using the formula: bubble rate = (cost - m*(TF+TB+TW)) / cost, where m is the number of microbatches and TF, TB, and TW represent computation costs for various transformer operations. These values can be extracted from the profiling data in the logs.\n\nRepeat steps 1-4 for different model sizes (adjust HIDDEN_SIZE and LAYERS parameters) and microbatch configurations (24, 32, and 64) to complete the experiment."
}