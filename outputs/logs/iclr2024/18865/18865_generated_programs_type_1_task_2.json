{
    "source": [
        "/workspace/OpenPDE/SineNet/pdearena/scripts/train.py",
        "/workspace/OpenPDE/SineNet/pdearena/scripts/test.py"
    ],
    "usage_instructions": "To compare SINENET-8 with SINENET-8-ENTANGLED on the INS, CNS, and SWE datasets, follow these steps:\n\n1. First, set up the environment:\n   ```\n   cd /workspace/OpenPDE/SineNet/pdearena\n   source setup.sh\n   ```\n\n2. For each dataset (INS, CNS, SWE), train and test both models:\n\n   a) For INS (NavierStokes2D):\n      - Train SINENET-8:\n        ```\n        python scripts/train.py -c configs/navierstokes2d.yaml --data.data_dir=<path_to_INS_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --model.lr=2e-4 --optimizer.lr=2e-4\n        ```\n      - Train SINENET-8-ENTANGLED:\n        ```\n        python scripts/train.py -c configs/navierstokes2d.yaml --data.data_dir=<path_to_INS_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual-tangle --model.lr=2e-4 --optimizer.lr=2e-4\n        ```\n      - Test SINENET-8:\n        ```\n        python scripts/test.py test -c configs/navierstokes2d.yaml --data.data_dir=<path_to_INS_data> --trainer.devices=1 --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --ckpt_path=<path_to_sinenet8_checkpoint>\n        ```\n      - Test SINENET-8-ENTANGLED:\n        ```\n        python scripts/test.py test -c configs/navierstokes2d.yaml --data.data_dir=<path_to_INS_data> --trainer.devices=1 --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual-tangle --ckpt_path=<path_to_sinenet8_entangled_checkpoint>\n        ```\n\n   b) For CNS (CFD):\n      - Train SINENET-8:\n        ```\n        python scripts/train.py -c configs/cfd.yaml --data.data_dir=<path_to_CNS_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --model.lr=2e-4 --optimizer.lr=2e-4\n        ```\n      - Train SINENET-8-ENTANGLED:\n        ```\n        python scripts/train.py -c configs/cfd.yaml --data.data_dir=<path_to_CNS_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual-tangle --model.lr=2e-4 --optimizer.lr=2e-4\n        ```\n      - Test SINENET-8:\n        ```\n        python scripts/test.py test -c configs/cfd.yaml --data.data_dir=<path_to_CNS_data> --trainer.devices=1 --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --ckpt_path=<path_to_sinenet8_checkpoint>\n        ```\n      - Test SINENET-8-ENTANGLED:\n        ```\n        python scripts/test.py test -c configs/cfd.yaml --data.data_dir=<path_to_CNS_data> --trainer.devices=1 --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual-tangle --ckpt_path=<path_to_sinenet8_entangled_checkpoint>\n        ```\n\n   c) For SWE (ShallowWater2DVel-2Day):\n      - Train SINENET-8:\n        ```\n        python scripts/train.py -c configs/shallowwater2d_2day.yaml --data.data_dir=<path_to_SWE_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --model.lr=2e-4 --optimizer.lr=2e-4\n        ```\n      - Train SINENET-8-ENTANGLED:\n        ```\n        python scripts/train.py -c configs/shallowwater2d_2day.yaml --data.data_dir=<path_to_SWE_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual-tangle --model.lr=2e-4 --optimizer.lr=2e-4\n        ```\n      - Test SINENET-8:\n        ```\n        python scripts/test.py test -c configs/shallowwater2d_2day.yaml --data.data_dir=<path_to_SWE_data> --trainer.devices=1 --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --ckpt_path=<path_to_sinenet8_checkpoint>\n        ```\n      - Test SINENET-8-ENTANGLED:\n        ```\n        python scripts/test.py test -c configs/shallowwater2d_2day.yaml --data.data_dir=<path_to_SWE_data> --trainer.devices=1 --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual-tangle --ckpt_path=<path_to_sinenet8_entangled_checkpoint>\n        ```\n\n3. The test results will include both one-step and rollout error percentages as required for the comparison. The logs will be saved in the output directory specified in the config files (default is 'outputs').\n\nNote: The models 'sinenet8-dual' and 'sinenet8-dual-tangle' are defined in the model registry (/workspace/OpenPDE/SineNet/pdearena/pdearena/models/registry.py) with identical parameter counts but different architectures - 'sinenet8-dual' uses disentangled downsampling (default disentangle=True) while 'sinenet8-dual-tangle' uses entangled downsampling (disentangle=False)."
}