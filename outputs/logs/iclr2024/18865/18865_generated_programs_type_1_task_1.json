{
    "source": [
        "/workspace/OpenPDE/SineNet/pdearena/scripts/train.py",
        "/workspace/OpenPDE/SineNet/pdearena/scripts/test.py"
    ],
    "usage_instructions": "To compare SineNet-8 versus SineNet-16 across the INS, CNS, and SWE datasets, you need to:\n\n1. First, set up the environment:\n   ```\n   cd /workspace/OpenPDE/SineNet/pdearena\n   source setup.sh\n   ```\n\n2. Create a SineNet-16 model configuration by adding the following to the MODEL_REGISTRY in `/workspace/OpenPDE/SineNet/pdearena/pdearena/models/registry.py`:\n   ```python\n   \"sinenet16-dual\": { \n       \"class_path\": \"pdearena.modules.sinenet_dual.sinenet\",\n       \"init_args\": {\n           \"hidden_channels\": 64,\n           \"num_waves\": 16,\n           \"mult\": 1.425,\n           \"padding_mode\": \"zeros\",\n           \"par1\": 0\n       },\n   },\n   ```\n\n3. Train SineNet-8 on each dataset:\n   ```\n   # For INS (Incompressible Navier-Stokes)\n   python scripts/train.py -c configs/navierstokes2d.yaml --data.data_dir=<path_to_INS_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --model.lr=2e-4 --optimizer.lr=2e-4\n   \n   # For CNS (Compressible Navier-Stokes)\n   python scripts/train.py -c configs/cfd.yaml --data.data_dir=<path_to_CNS_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --model.lr=2e-4 --optimizer.lr=2e-4\n   \n   # For SWE (Shallow Water Equations)\n   python scripts/train.py -c configs/shallowwater2d_2day.yaml --data.data_dir=<path_to_SWE_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --model.lr=2e-4 --optimizer.lr=2e-4\n   ```\n\n4. Train SineNet-16 on each dataset (using the same hyperparameters):\n   ```\n   # For INS (Incompressible Navier-Stokes)\n   python scripts/train.py -c configs/navierstokes2d.yaml --data.data_dir=<path_to_INS_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet16-dual --model.lr=2e-4 --optimizer.lr=2e-4\n   \n   # For CNS (Compressible Navier-Stokes)\n   python scripts/train.py -c configs/cfd.yaml --data.data_dir=<path_to_CNS_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet16-dual --model.lr=2e-4 --optimizer.lr=2e-4\n   \n   # For SWE (Shallow Water Equations)\n   python scripts/train.py -c configs/shallowwater2d_2day.yaml --data.data_dir=<path_to_SWE_data> --data.num_workers=8 --data.batch_size=32 --model.name=sinenet16-dual --model.lr=2e-4 --optimizer.lr=2e-4\n   ```\n\n5. Test both models on each dataset to compare one-step and rollout errors:\n   ```\n   # For SineNet-8 on INS\n   python scripts/test.py test -c configs/navierstokes2d.yaml --data.data_dir=<path_to_INS_data> --trainer.devices=1 --data.num_workers=8 --data.batch_size=32 --model.name=sinenet8-dual --ckpt_path=<path_to_sinenet8_INS_checkpoint>\n   \n   # For SineNet-16 on INS\n   python scripts/test.py test -c configs/navierstokes2d.yaml --data.data_dir=<path_to_INS_data> --trainer.devices=1 --data.num_workers=8 --data.batch_size=32 --model.name=sinenet16-dual --ckpt_path=<path_to_sinenet16_INS_checkpoint>\n   ```\n   (Repeat similar commands for CNS and SWE datasets)\n\nThe training script will automatically run testing after training is complete, and the results will include one-step and rollout errors that can be compared between SineNet-8 and SineNet-16 across all three datasets."
}