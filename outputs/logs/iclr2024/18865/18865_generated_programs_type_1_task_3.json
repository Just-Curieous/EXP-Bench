{
    "source": [
        "/workspace/OpenPDE/SineNet/pdearena/scripts/train.py",
        "/workspace/OpenPDE/SineNet/pdearena/scripts/test.py"
    ],
    "usage_instructions": "To conduct the ablation study on the effect of increasing the number of waves (K) in SineNet, use the following steps:\n\n1. First, set up the environment:\n   ```\n   cd /workspace/OpenPDE/SineNet/pdearena\n   source setup.sh\n   ```\n\n2. For each dataset (INS, CNS, SWE) and each K value (2, 4, 6, 8, 10, 12, 14, 16), train a SineNet model using the train.py script. The repository already has model configurations for K=2, 4, 6, 8 in the registry.py file with appropriate channel multipliers (mK) to keep the parameter count approximately constant. For K=10, 12, 14, 16, you would need to add similar configurations with adjusted multipliers.\n\n   For example, to train on the INS dataset with K=2:\n   ```\n   python scripts/train.py -c configs/navierstokes2d.yaml \\\n       --data.data_dir=<data_dir> \\\n       --data.num_workers=8 \\\n       --data.batch_size=32 \\\n       --model.name=sinenet2-dual \\\n       --model.lr=2e-4 --optimizer.lr=2e-4\n   ```\n\n   For CNS dataset with K=4:\n   ```\n   python scripts/train.py -c configs/cfd.yaml \\\n       --data.data_dir=<data_dir> \\\n       --data.num_workers=8 \\\n       --data.batch_size=32 \\\n       --model.name=sinenet4-dual \\\n       --model.lr=2e-4 --optimizer.lr=2e-4\n   ```\n\n   For SWE dataset with K=8:\n   ```\n   python scripts/train.py -c configs/shallowwater2d_2day.yaml \\\n       --data.data_dir=<data_dir> \\\n       --data.num_workers=8 \\\n       --data.batch_size=32 \\\n       --model.name=sinenet8-dual \\\n       --model.lr=2e-4 --optimizer.lr=2e-4\n   ```\n\n3. After training, test each model using the test.py script to collect one-step prediction errors and rollout errors:\n   ```\n   python scripts/test.py test -c configs/<config>.yaml \\\n       --data.data_dir=<data_dir> \\\n       --trainer.devices=1 \\\n       --data.num_workers=8 \\\n       --data.batch_size=32 \\\n       --model.name=<model_name> \\\n       --ckpt_path=<ckpt_path>\n   ```\n\n4. The test results will include both one-step prediction errors and rollout errors over the temporal domain. For the CNS dataset, the results will include metrics for density, pressure, and velocity components as mentioned in the experiment question.\n\n5. After collecting all the results, plot the error metrics versus the number of waves (K) to visually assess trends and identify the plateau region around K=16.\n\nNote: The existing model registry already includes configurations for SineNet with K=2, 4, 6, 8 with appropriate channel multipliers to keep the parameter count approximately constant. For K=10, 12, 14, 16, you would need to add similar configurations to the registry with adjusted multipliers following the same pattern."
}