{
    "source": [
        "/workspace/OpenPDE/SineNet/pdearena/scripts/train.py",
        "/workspace/OpenPDE/SineNet/pdearena/scripts/test.py"
    ],
    "usage_instructions": "To compare SineNet-8 with baseline models (F-FNO, DIL-RESNET, U-NET-128, U-NET-MOD) across fluid dynamics datasets (INS, CNS, SWE), follow these steps:\n\n1. First, set up the environment:\n   ```\n   cd /workspace/OpenPDE/SineNet/pdearena\n   source setup.sh\n   ```\n\n2. For each dataset and model combination, run the test script with the appropriate configuration:\n\n   For INS (Incompressible Navier-Stokes):\n   ```\n   python scripts/test.py test -c configs/navierstokes2d.yaml \\\n       --data.data_dir=<path_to_INS_data> \\\n       --trainer.devices=1 \\\n       --data.num_workers=8 \\\n       --data.batch_size=32 \\\n       --model.name=sinenet8-dual \\\n       --ckpt_path=<path_to_sinenet8_checkpoint>\n   ```\n\n   For CNS (Compressible Navier-Stokes):\n   ```\n   python scripts/test.py test -c configs/cfd.yaml \\\n       --data.data_dir=<path_to_CNS_data> \\\n       --trainer.devices=1 \\\n       --data.num_workers=8 \\\n       --data.batch_size=32 \\\n       --model.name=sinenet8-dual \\\n       --ckpt_path=<path_to_sinenet8_checkpoint>\n   ```\n\n   For SWE (Shallow Water Equations):\n   ```\n   python scripts/test.py test -c configs/shallowwater2d_2day.yaml \\\n       --data.data_dir=<path_to_SWE_data> \\\n       --trainer.devices=1 \\\n       --data.num_workers=8 \\\n       --data.batch_size=32 \\\n       --model.name=sinenet8-dual \\\n       --ckpt_path=<path_to_sinenet8_checkpoint>\n   ```\n\n3. Repeat step 2 for each baseline model by changing the `--model.name` parameter:\n   - For F-FNO: use `--model.name=FFNO-24-32-96-noShare`\n   - For DIL-RESNET: use `--model.name=DilResNet-128-norm`\n   - For U-NET-MOD: use `--model.name=Unetmod-64`\n   - For U-NET-128: use `--model.name=sinenet1-dual-128` (this is equivalent to U-NET-128 as mentioned in the paper)\n\n4. The test script will output both one-step prediction errors and autoregressive multi-step rollout errors for each model and dataset combination, allowing for direct comparison as described in the experiment question.\n\nNote: Make sure to use the same checkpoint paths for each model that were trained under identical conditions as specified in Section 5.1 of the paper."
}