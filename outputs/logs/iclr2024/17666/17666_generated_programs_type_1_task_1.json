{
    "source": ["/workspace/create_clean_set.py", "/workspace/other_defense.py"],
    "usage_instructions": "To conduct the ablation study on how the size of the reserved clean set (Dc) affects BaDExpert's backdoor detection performance, follow these steps:\n\n1. First, create clean sets of different sizes (from 200 to 1800 samples) using the create_clean_set.py script:\n   ```\n   python create_clean_set.py -dataset=cifar10 -clean_budget 200\n   python create_clean_set.py -dataset=cifar10 -clean_budget 400\n   python create_clean_set.py -dataset=cifar10 -clean_budget 600\n   python create_clean_set.py -dataset=cifar10 -clean_budget 800\n   python create_clean_set.py -dataset=cifar10 -clean_budget 1000\n   python create_clean_set.py -dataset=cifar10 -clean_budget 1200\n   python create_clean_set.py -dataset=cifar10 -clean_budget 1400\n   python create_clean_set.py -dataset=cifar10 -clean_budget 1600\n   python create_clean_set.py -dataset=cifar10 -clean_budget 1800\n   ```\n\n2. For each clean set size, run the BaDExpert detection on a fixed attack type (e.g., Blend attack on CIFAR10):\n   ```\n   python other_defense.py -defense=BaDExpert -dataset=cifar10 -poison_type=blend -poison_rate=0.003 -cover_rate=0.003 -alpha=0.15\n   ```\n\n3. After each run, record the AUROC value from the output. The AUROC will be printed in the output as 'AUC: X.XXXX'.\n\n4. For comparison with other detectors, run SCALE-UP and STRIP under identical conditions:\n   ```\n   python other_defense.py -defense=ScaleUp -dataset=cifar10 -poison_type=blend -poison_rate=0.003 -cover_rate=0.003 -alpha=0.15\n   python other_defense.py -defense=STRIP -dataset=cifar10 -poison_type=blend -poison_rate=0.003 -cover_rate=0.003 -alpha=0.15\n   ```\n\n5. Plot the AUROC values against the different clean set sizes to visualize the performance trend.\n\nNote: Between each experiment with a different clean set size, you may need to reset the environment or delete the previously created clean set directory to avoid conflicts."
}