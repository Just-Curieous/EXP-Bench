{
    "source": ["/workspace/examples/musc_main.py"],
    "usage_instructions": "To test the impact of the RsCIN module on anomaly classification performance, you need to run the script twice with a minor modification to enable/disable RsCIN:\n\n1. First, run the script with RsCIN enabled (default setting):\n   ```\n   python examples/musc_main.py --device 0 --data_path ./data/mvtec_anomaly_detection/ --dataset_name mvtec_ad --class_name ALL --backbone_name ViT-L-14-336 --pretrained openai --feature_layers 5 11 17 23 --img_resize 518 --divide_num 1 --r_list 1 3 5 --batch_size 4 --output_dir ./output_with_rscin --save_excel True\n   ```\n\n2. Then, make a small modification to disable RsCIN by editing line 243-247 in /workspace/models/musc.py to set k_score=[0] (which disables RsCIN according to line 24-25 in _RsCIN.py):\n   ```\n   # Change from:\n   if self.dataset == 'visa':\n       k_score = [1, 8, 9]\n   elif self.dataset == 'mvtec_ad':\n       k_score = [1, 2, 3]\n   else:\n       k_score = [1, 2, 3]\n   \n   # To:\n   k_score = [0]  # Setting k_score to [0] disables RsCIN\n   ```\n\n3. Run the modified script with RsCIN disabled:\n   ```\n   python examples/musc_main.py --device 0 --data_path ./data/mvtec_anomaly_detection/ --dataset_name mvtec_ad --class_name ALL --backbone_name ViT-L-14-336 --pretrained openai --feature_layers 5 11 17 23 --img_resize 518 --divide_num 1 --r_list 1 3 5 --batch_size 4 --output_dir ./output_without_rscin --save_excel True\n   ```\n\n4. Repeat steps 1-3 for the VisA dataset by changing the dataset parameters:\n   ```\n   --data_path ./data/visa/ --dataset_name visa\n   ```\n\n5. Compare the classification metrics (AUROC, F1-max, AP) from the Excel files generated in the output directories to evaluate the impact of the RsCIN module."
}