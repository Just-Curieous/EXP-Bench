{
    "source": [
        "/workspace/scripts/train.py",
        "/workspace/zoo/extract_surface.py"
    ],
    "usage_instructions": "To compare the effect of explicit bias correction in SDF-to-density conversion across various renderers (NeuS, VolSDF, TUVR), follow these steps:\n\n1. First, train models with bias correction enabled:\n   ```bash\n   # For NeuS with bias correction (indoor scene)\n   ns-train neurodin-stage1-indoor-large --experiment_name neurodin-scene-bias-on --pipeline.datamanager.eval_camera_res_scale_factor 0.5 tnt-data --data <path-to-data> --scene_name <scene_name>\n   ```\n\n2. Then, train models with bias correction disabled by modifying the configuration:\n   ```bash\n   # For NeuS without bias correction (indoor scene)\n   ns-train neurodin-stage1-indoor-large --experiment_name neurodin-scene-bias-off --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --pipeline.model.sdf_field.use_unbias_for_laplace=False tnt-data --data <path-to-data> --scene_name <scene_name>\n   ```\n\n3. Extract meshes from both models for comparison:\n   ```bash\n   # Extract mesh with bias correction\n   python zoo/extract_surface.py --conf <path-to-bias-on-config> --resolution 2048 --output_path meshes/bias_on.ply\n   \n   # Extract mesh without bias correction\n   python zoo/extract_surface.py --conf <path-to-bias-off-config> --resolution 2048 --output_path meshes/bias_off.ply\n   ```\n\n4. Repeat steps 1-3 for different renderers by using different model configurations:\n   - For VolSDF: Modify the model to use VolSDF's density conversion but with the same bias correction approach\n   - For TUVR: Use the TUVR renderer with and without bias correction\n\nThe key parameter that controls the bias correction is `use_unbias_for_laplace` in the SDF field configuration, which implements the explicit bias correction from NeuRodin's Equation 8 that corrects the SDF-to-density conversion."
}