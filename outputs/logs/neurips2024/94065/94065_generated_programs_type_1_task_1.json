{
    "source": [
        "/workspace/scripts/train.py",
        "/workspace/zoo/extract_surface.py"
    ],
    "usage_instructions": "To evaluate whether explicit bias correction in Stage 1 and TUVR modeling in Stage 2 contribute to better surface reconstruction on large-scale scenes, follow these steps:\n\n1. First, train the NeuRodin model with both components enabled (full pipeline):\n   - Stage 1 (with explicit bias correction): `ns-train neurodin-stage1-outdoor-large --experiment_name neurodin-full-stage1 --pipeline.datamanager.eval_camera_res_scale_factor 0.5 tnt-advance-data --data <path-to-tnt> --scene_name <scene_name>`\n   - Stage 2 (with TUVR modeling): `ns-train neurodin-stage2-outdoor-large --experiment_name neurodin-full-stage2 --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --trainer.load_dir <path-to-stage1-checkpoints-dir> tnt-advance-data --data <path-to-tnt> --scene_name <scene_name>`\n\n2. Train NeuRodin without explicit bias correction (modify Stage 1):\n   - Stage 1: `ns-train neurodin-stage1-outdoor-large --experiment_name neurodin-nobias-stage1 --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --pipeline.model.unbias_depth_loss_mult=0.0 --pipeline.model.enable_unbias_loss_schedule=false tnt-advance-data --data <path-to-tnt> --scene_name <scene_name>`\n   - Stage 2: `ns-train neurodin-stage2-outdoor-large --experiment_name neurodin-nobias-stage2 --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --trainer.load_dir <path-to-nobias-stage1-checkpoints-dir> tnt-advance-data --data <path-to-tnt> --scene_name <scene_name>`\n\n3. Train NeuRodin without TUVR modeling (modify Stage 2):\n   - Stage 1: `ns-train neurodin-stage1-outdoor-large --experiment_name neurodin-notuvr-stage1 --pipeline.datamanager.eval_camera_res_scale_factor 0.5 tnt-advance-data --data <path-to-tnt> --scene_name <scene_name>`\n   - Stage 2: `ns-train neurodin-stage2-outdoor-large --experiment_name neurodin-notuvr-stage2 --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --pipeline.model.sdf_field.use_unbias_for_laplace=false --trainer.load_dir <path-to-notuvr-stage1-checkpoints-dir> tnt-advance-data --data <path-to-tnt> --scene_name <scene_name>`\n\n4. Train NeuRodin without both components:\n   - Stage 1: `ns-train neurodin-stage1-outdoor-large --experiment_name neurodin-noboth-stage1 --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --pipeline.model.unbias_depth_loss_mult=0.0 --pipeline.model.enable_unbias_loss_schedule=false tnt-advance-data --data <path-to-tnt> --scene_name <scene_name>`\n   - Stage 2: `ns-train neurodin-stage2-outdoor-large --experiment_name neurodin-noboth-stage2 --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --pipeline.model.sdf_field.use_unbias_for_laplace=false --trainer.load_dir <path-to-noboth-stage1-checkpoints-dir> tnt-advance-data --data <path-to-tnt> --scene_name <scene_name>`\n\n5. Train the Neuralangelo baseline:\n   - `ns-train neuralangelo --experiment_name neuralangelo-baseline --pipeline.datamanager.eval_camera_res_scale_factor 0.5 tnt-advance-data --data <path-to-tnt> --scene_name <scene_name>`\n\n6. Extract meshes for all trained models using the same resolution:\n   - `python zoo/extract_surface.py --conf <path-to-config> --resolution 2048`\n\n7. Compare the results using the official Tanks and Temples evaluation server for quantitative metrics (accuracy, completeness, F-score) and visual inspection for qualitative assessment of surface details."
}