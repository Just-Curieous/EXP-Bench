{
    "source": [
        "/workspace/scripts/train.py",
        "/workspace/zoo/extract_surface.py",
        "/workspace/scripts/eval.py"
    ],
    "usage_instructions": "To compare the effectiveness of stochastic-step numerical gradient estimation against analytical and progressive numerical gradient methods on the Meetingroom scene at iteration 7500:\n\n1. Train three models with different gradient estimation methods:\n\n   a) Model A (Analytical Gradient):\n   ```bash\n   ns-train neurodin-stage1-indoor-large --experiment_name neurodin-Meetingroom-analytical --pipeline.model.sdf_field.use_numerical_gradients=False --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --trainer.max_num_iterations=7500 tnt-data --data <path-to-tnt> --scene_name Meetingroom\n   ```\n\n   b) Model B (Progressive Numerical Gradient - Neuralangelo-style):\n   ```bash\n   ns-train neurodin-stage1-indoor-large --experiment_name neurodin-Meetingroom-progressive --pipeline.model.sdf_field.use_numerical_gradients=True --pipeline.model.sdf_field.use_random_taps=False --pipeline.model.enable_numerical_gradients_schedule=True --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --trainer.max_num_iterations=7500 tnt-data --data <path-to-tnt> --scene_name Meetingroom\n   ```\n\n   c) Model C (Stochastic-Step Numerical Gradient - NeuRodin innovation):\n   ```bash\n   ns-train neurodin-stage1-indoor-large --experiment_name neurodin-Meetingroom-stochastic --pipeline.model.sdf_field.use_numerical_gradients=True --pipeline.model.sdf_field.use_random_taps=True --pipeline.datamanager.eval_camera_res_scale_factor 0.5 --trainer.max_num_iterations=7500 tnt-data --data <path-to-tnt> --scene_name Meetingroom\n   ```\n\n2. Extract meshes for each model at iteration 7500:\n   ```bash\n   python zoo/extract_surface.py --conf outputs/neurodin-Meetingroom-analytical/neurodin/*/config.yml --resolution 2048 --output_path meshes/analytical_7500.ply\n   python zoo/extract_surface.py --conf outputs/neurodin-Meetingroom-progressive/neurodin/*/config.yml --resolution 2048 --output_path meshes/progressive_7500.ply\n   python zoo/extract_surface.py --conf outputs/neurodin-Meetingroom-stochastic/neurodin/*/config.yml --resolution 2048 --output_path meshes/stochastic_7500.ply\n   ```\n\n3. Evaluate and compare depth maps and image metrics:\n   ```bash\n   python scripts/eval.py --load_config outputs/neurodin-Meetingroom-analytical/neurodin/*/config.yml --output_path metrics/analytical_7500.json --output_images_path images/analytical_7500/\n   python scripts/eval.py --load_config outputs/neurodin-Meetingroom-progressive/neurodin/*/config.yml --output_path metrics/progressive_7500.json --output_images_path images/progressive_7500/\n   python scripts/eval.py --load_config outputs/neurodin-Meetingroom-stochastic/neurodin/*/config.yml --output_path metrics/stochastic_7500.json --output_images_path images/stochastic_7500/\n   ```\n\n4. Compare the results by examining:\n   - Depth maps in the output image directories\n   - Mesh quality and smoothness using a 3D viewer\n   - Metrics from the JSON files\n\nThis will allow you to evaluate whether stochastic-step numerical gradient estimation (Model C) produces more natural and accurate depth maps, smoother surfaces without collapse, and better balances topological flexibility with geometric regularization compared to analytical gradients (Model A) and progressive numerical gradients (Model B)."
}