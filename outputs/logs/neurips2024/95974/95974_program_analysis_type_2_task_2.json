{
  "requirements": [
    "Step 1: Parse command-line arguments including configuration file path, batch size, checkpoint path, output directory, and flags for evaluation or interactive prediction (/workspace/womd/tools/submission.py:43-80)",
    "Step 2: Define submission metadata including account name, method name, authors, affiliation, and model information (/workspace/womd/tools/submission.py:188-198)",
    "Step 3: Set up logging based on whether the submission is for evaluation or testing (/workspace/womd/tools/submission.py:200-217)",
    "Step 4: Build the test dataloader with appropriate configuration for either regular or interactive prediction (/workspace/womd/tools/submission.py:219-224)",
    "Step 5: Initialize the BeTopNet model using the provided configuration (/workspace/womd/tools/submission.py:226)",
    "Step 6: Load the trained model parameters from the specified checkpoint file (/workspace/womd/tools/submission.py:228-230)",
    "Step 7: Generate predictions by running the model on the test dataset (/workspace/womd/tools/submission.py:232)",
    "Step 8: Serialize the predictions into the format required by the Waymo Open Motion Dataset Challenge (/workspace/womd/tools/submission.py:115-162)",
    "Step 9: Save the serialized predictions to a .proto file and compress it into a .tar.gz file for submission (/workspace/womd/tools/submission.py:83-113)",
    "Final Step: Return the path to the generated submission file that can be uploaded to the Waymo Challenge leaderboard (/workspace/womd/tools/submission.py:233)"
  ],
  "agent_instructions": "Create a script that generates a submission file for the Waymo Open Motion Dataset Prediction Challenge using a trained BeTopNet model. The script should:\n\n1. Accept command-line arguments for:\n   - Configuration file path (matching the one used during training)\n   - Batch size for inference\n   - Path to the trained model checkpoint\n   - Output directory for the submission file\n   - Flag to indicate if submitting for evaluation (--eval)\n   - Flag to indicate if submitting for the Interactive Prediction challenge (--interactive)\n\n2. Include a dictionary for submission metadata with the following fields:\n   - Waymo account email\n   - Unique method name\n   - List of authors\n   - Affiliation\n   - Boolean flags for data types used (lidar, camera)\n   - Boolean flag for public model pretraining\n   - Public model names (if applicable)\n   - Number of model parameters\n\n3. Set up appropriate logging based on submission type.\n\n4. Build a dataloader for the test dataset with configuration appropriate for either regular or interactive prediction.\n\n5. Load the BeTopNet model architecture based on the provided configuration.\n\n6. Load the trained model parameters from the specified checkpoint file.\n\n7. Generate predictions by running the model on the test dataset.\n\n8. Serialize the predictions into the format required by the Waymo Open Motion Dataset Challenge:\n   - For regular prediction: format individual object trajectories with confidence scores\n   - For interactive prediction: format joint trajectories for multiple objects\n\n9. Save the serialized predictions to a .proto file and compress it into a .tar.gz file that can be uploaded to the Waymo Challenge leaderboard.\n\nThe final output should be a .tar.gz file in the specified output directory that meets all the requirements for submission to the Waymo Open Motion Dataset Prediction Challenge."
}