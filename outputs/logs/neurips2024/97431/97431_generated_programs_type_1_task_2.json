{
    "source": [
        "/workspace/main.py",
        "/workspace/scripts/main_vicuna/1_data1_None_defense.sh",
        "/workspace/scripts/main_vicuna/8_data1_self_reminder.sh",
        "/workspace/scripts/main_vicuna/15_data1_RPO.sh",
        "/workspace/scripts/main_vicuna/22_data1_smoothLLM.sh",
        "/workspace/scripts/main_vicuna/29_data1_adv_training_noaug.sh",
        "/workspace/scripts/main_vicuna/36_data1_unlearn.sh",
        "/workspace/scripts/main_vicuna/43_data1_safety_tuning.sh"
    ],
    "usage_instructions": "To evaluate the effectiveness of various defense mechanisms against jailbreak attacks on Vicuna-13B using the MaliciousInstruct dataset, follow these steps:\n\n1. First, ensure you have the MaliciousInstruct dataset at `/workspace/data/MaliciousInstruct_100.csv`.\n\n2. Run the following scripts in sequence to test each attack method against each defense mechanism:\n\n   - For baseline (No Defense):\n     ```\n     bash /workspace/scripts/main_vicuna/1_data1_None_defense.sh  # AutoDAN attack\n     bash /workspace/scripts/main_vicuna/2_data1_None_defense.sh  # PAIR attack\n     bash /workspace/scripts/main_vicuna/3_data1_None_defense.sh  # TAP attack\n     bash /workspace/scripts/main_vicuna/4_data1_None_defense.sh  # GPTFuzz attack\n     bash /workspace/scripts/main_vicuna/5_data1_None_defense.sh  # GCG attack\n     bash /workspace/scripts/main_vicuna/6_data1_None_defense.sh  # AdvPrompter attack\n     bash /workspace/scripts/main_vicuna/7_data1_None_defense.sh  # AmpleGCG attack\n     ```\n\n   - For Self-Reminder defense:\n     ```\n     bash /workspace/scripts/main_vicuna/8_data1_self_reminder.sh  # AutoDAN attack\n     # Continue with scripts 9-14 for other attack methods\n     ```\n\n   - For RPO defense:\n     ```\n     bash /workspace/scripts/main_vicuna/15_data1_RPO.sh  # AutoDAN attack\n     # Continue with scripts 16-21 for other attack methods\n     ```\n\n   - For SmoothLLM defense:\n     ```\n     bash /workspace/scripts/main_vicuna/22_data1_smoothLLM.sh  # AutoDAN attack\n     # Continue with scripts 23-28 for other attack methods\n     ```\n\n   - For Adversarial Training defense:\n     ```\n     bash /workspace/scripts/main_vicuna/29_data1_adv_training_noaug.sh  # AutoDAN attack\n     # Continue with scripts 30-35 for other attack methods\n     ```\n\n   - For Unlearning defense:\n     ```\n     bash /workspace/scripts/main_vicuna/36_data1_unlearn.sh  # AutoDAN attack\n     # Continue with scripts 37-42 for other attack methods\n     ```\n\n   - For Safety Training defense:\n     ```\n     bash /workspace/scripts/main_vicuna/43_data1_safety_tuning.sh  # AutoDAN attack\n     # Continue with scripts 44-49 for other attack methods\n     ```\n\n3. The results will be saved in the `/workspace/exp_results/main_vicuna/` directory, and logs will be stored in `/workspace/exp_logs/main_vicuna/`.\n\n4. Each script uses GPT-4 as a judge to evaluate the Attack Success Rate (ASRAgent) by setting the `--agent_evaluation` flag.\n\nNote: Before running the scripts, make sure you have set up your OpenAI API key as mentioned in the README.md file, as GPT-4 is used for evaluation. You may also need to modify the paths to the defense models if they are not in the default locations."
}