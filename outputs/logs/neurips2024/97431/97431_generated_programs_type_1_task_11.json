{
    "source": [
        "/workspace/scripts/main_vicuna/1_data1_None_defense.sh",
        "/workspace/scripts/main_vicuna/2_data1_None_defense.sh",
        "/workspace/scripts/main_vicuna/50_data2_None_defense.sh",
        "/workspace/scripts/main_vicuna/51_data2_None_defense.sh"
    ],
    "usage_instructions": "To answer the experiment question about combined jailbreak techniques and their effect on ASR, execute the following scripts in sequence:\n\n1. First, run the token-level (AutoDAN) attack on weak defense with AdvBench dataset:\n   ```\n   bash /workspace/scripts/main_vicuna/1_data1_None_defense.sh\n   ```\n   This script uses Vicuna-13B (normal defense strength) with no safety prompt as the target model and AutoDAN as the attack method on the AdvBench dataset.\n\n2. Next, run the prompt-level (PAIR) attack on weak defense with AdvBench dataset:\n   ```\n   bash /workspace/scripts/main_vicuna/2_data1_None_defense.sh\n   ```\n   This script uses Vicuna-13B (normal defense strength) with no safety prompt as the target model and PAIR as the attack method on the AdvBench dataset.\n\n3. Then, run the token-level (AutoDAN) attack on weak defense with MaliciousInstruct dataset:\n   ```\n   bash /workspace/scripts/main_vicuna/50_data2_None_defense.sh\n   ```\n   This script uses Vicuna-13B (normal defense strength) with no safety prompt as the target model and AutoDAN as the attack method on the MaliciousInstruct dataset.\n\n4. Finally, run the prompt-level (PAIR) attack on weak defense with MaliciousInstruct dataset:\n   ```\n   bash /workspace/scripts/main_vicuna/51_data2_None_defense.sh\n   ```\n   This script uses Vicuna-13B (normal defense strength) with no safety prompt as the target model and PAIR as the attack method on the MaliciousInstruct dataset.\n\n5. After running these scripts, you can analyze the results using the analysis script:\n   ```\n   python /workspace/analysis/report_trick.py --exp mv\n   ```\n   This will generate a report showing the ASR metrics (ASRPrefix and ASRAgent) for all the experiments.\n\nNote: The scripts use different attacker strengths and defense strengths as specified in the experiment question. The attacker strength is controlled by the attack model (gpt-3.5-turbo for normal, gpt-4 for strong) and the defense strength is controlled by the target model and defense type. The scripts also include agent evaluation to compute both ASRPrefix and ASRAgent metrics."
}