{
  "requirements": [
    "Step 1: Install HEST according to installation instructions (/workspace/tutorials/4-Running-HEST-Benchmark.ipynb:44-44)",
    "Step 2: Configure the benchmark by editing the bench_config.yaml file to specify data directories, model weights location, batch size, and which encoder model to use (/workspace/bench_config/bench_config.yaml:1-47)",
    "Step 3: Select which datasets/cancer types to evaluate in the configuration file (/workspace/bench_config/bench_config.yaml:36-47)",
    "Step 4: Download benchmark data and model weights automatically from Hugging Face (/workspace/src/hest/bench/benchmark.py:432-435)",
    "Step 5: Load the specified encoder model (e.g., ResNet50) (/workspace/src/hest/bench/benchmark.py:245-251)",
    "Step 6: Extract embeddings from histology image patches using the encoder model (/workspace/src/hest/bench/benchmark.py:253-273)",
    "Step 7: Load gene expression data for the selected datasets (/workspace/src/hest/bench/benchmark.py:284-304)",
    "Step 8: Optionally perform dimensionality reduction on the embeddings (/workspace/src/hest/bench/benchmark.py:310-315)",
    "Step 9: Train regression models (Ridge regression by default) to predict gene expression from image embeddings (/workspace/src/hest/bench/trainer.py:7-23)",
    "Step 10: Evaluate model performance using Pearson correlation between predicted and actual gene expression values (/workspace/src/hest/bench/trainer.py:61-84)",
    "Step 11: Calculate and report average performance metrics across genes and datasets (/workspace/src/hest/bench/benchmark.py:149-172)",
    "Final Step: Generate and save benchmark results to the specified results directory (/workspace/src/hest/bench/benchmark.py:165-172)"
  ],
  "agent_instructions": "Your task is to evaluate a foundation model's ability to predict gene expression from histology images using the HEST-Benchmark. This benchmark assesses how well image features extracted from histology patches can predict the expression levels of the 50 most variable genes in spatial transcriptomics data across different cancer types.\n\nFollow these steps to run the benchmark:\n\n1. First, ensure HEST is properly installed according to the installation instructions.\n\n2. Configure the benchmark by creating a configuration file (YAML format) with the following parameters:\n   - Directory for benchmark data (where the datasets will be stored)\n   - Directory for saving results\n   - Directory for storing embeddings\n   - Directory for model weights\n   - Batch size for inference\n   - Number of workers for data loading\n   - Which encoder model to use (e.g., ResNet50)\n   - Which datasets/cancer types to evaluate (e.g., IDC, PRAD, PAAD, etc.)\n\n3. The benchmark will automatically download the necessary data and model weights from Hugging Face.\n\n4. You can run the benchmark in two ways:\n   - Using the command line interface by executing the benchmark script with your configuration file\n   - Using the Python API to run the benchmark with a custom model by providing the model, transforms, and precision\n\n5. The benchmark process involves:\n   - Loading the specified encoder model\n   - Extracting embeddings from histology image patches\n   - Loading gene expression data for the selected datasets\n   - Optionally performing dimensionality reduction on the embeddings\n   - Training regression models (Ridge regression by default) to predict gene expression from image embeddings\n   - Evaluating model performance using Pearson correlation between predicted and actual gene expression values\n\n6. The benchmark will output results showing the Pearson correlation between predicted and actual gene expression values for each gene and dataset, as well as average performance metrics.\n\nThe benchmark includes multiple cancer types/organs that you can evaluate, such as Invasive Ductal Carcinoma (IDC), Prostate Adenocarcinoma (PRAD), Pancreatic Adenocarcinoma (PAAD), and others. Each task involves predicting gene expression from 112×112 μm H&E-stained image patches."
}