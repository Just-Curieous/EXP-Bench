{
  "requirements": [
    "Step 1: Set up the experiment runner script with Hydra configuration management to handle command-line arguments for algorithms, tasks, and seeds (/workspace/fine_tuned/vmas/vmas_run.py:7-15)",
    "Step 2: Create a main function that loads the configuration from Hydra, extracts task and algorithm names from the runtime choices, and displays the configuration (/workspace/fine_tuned/vmas/vmas_run.py:15-23)",
    "Step 3: Load the experiment from the Hydra configuration with the specified task name (/workspace/fine_tuned/vmas/vmas_run.py:25)",
    "Step 4: Run the experiment (/workspace/fine_tuned/vmas/vmas_run.py:26)",
    "Step 5: Create a plotting script that imports necessary libraries for data processing and visualization (/workspace/examples/plotting/plot_benchmark.py:7-13)",
    "Step 6: Implement a benchmark runner function that configures and runs experiments with specified algorithms, tasks, and seeds (/workspace/examples/plotting/plot_benchmark.py:16-56)",
    "Step 7: Load and merge experiment results from JSON files (/workspace/examples/plotting/plot_benchmark.py:63)",
    "Step 8: Process the experimental data for plotting (/workspace/examples/plotting/plot_benchmark.py:67)",
    "Step 9: Create matrices for environment comparison and sample efficiency (/workspace/examples/plotting/plot_benchmark.py:68-71)",
    "Step 10: Generate various plots including performance profiles, aggregate scores, sample efficiency curves, and probability of improvement (/workspace/examples/plotting/plot_benchmark.py:74-89)",
    "Final Step: Display the generated plots (/workspace/examples/plotting/plot_benchmark.py:90)"
  ],
  "agent_instructions": "You need to create two Python scripts for running and analyzing multi-agent reinforcement learning experiments using the BenchMARL framework:\n\n1. First, create an experiment runner script that:\n   - Uses Hydra for configuration management\n   - Accepts command-line arguments for algorithms (MASAC, MADDPG, MAPPO, IQL, VDN, QMIX), tasks (VMAS/Navigation, VMAS/Sampling, VMAS/Balance), and seeds (0,1,2)\n   - Loads experiment configurations from a YAML file\n   - Creates and runs an Experiment object with the specified configuration\n   - The script should be designed to run with a command like: `python script_name.py -m algorithm=masac,maddpg,mappo,iql,vdn,qmix task=vmas/navigation,vmas/sampling,vmas/balance seed=0,1,2 experiment.max_n_frames=10000000`\n\n2. Second, create a plotting script that:\n   - Loads experiment results from JSON files generated by the experiment runner\n   - Processes the data for visualization\n   - Creates matrices for environment comparison and sample efficiency analysis\n   - Generates multiple visualization types including:\n     * Performance profile figures\n     * Aggregate scores\n     * Sample efficiency curves (both environment-level and task-level)\n     * Probability of improvement between algorithms\n   - Displays all generated plots\n\nBoth scripts should work with the BenchMARL library, which provides classes like Experiment, Benchmark, Plotting, and various algorithm configurations (MappoConfig, QmixConfig, etc.). The experiment results should be saved as JSON files that can be loaded and analyzed by the plotting script.",
  "masked_source": [
    "/workspace/fine_tuned/vmas/vmas_run.py",
    "/workspace/examples/plotting/plot_benchmark.py"
  ]
}