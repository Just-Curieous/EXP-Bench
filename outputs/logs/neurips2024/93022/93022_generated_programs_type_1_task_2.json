{
    "source": [
        "/workspace/sim_inference.py",
        "/workspace/scripts/analyze_peptide_sim.py"
    ],
    "usage_instructions": "To compare the wall-clock time speedup of MDGEN over conventional MD simulations while maintaining accuracy:\n\n1. First, download the pre-trained forward simulation model weights:\n   ```\n   wget https://storage.googleapis.com/mdgen-public/weights/forward_sim.ckpt\n   ```\n\n2. Run the MDGEN forward simulation on the test tetrapeptides:\n   ```\n   python sim_inference.py --sim_ckpt forward_sim.ckpt --data_dir data/4AA_sims --split splits/4AA_test.csv --num_rollouts 10 --num_frames 1000 --xtc --out_dir results_mdgen\n   ```\n   This will generate 10 rollouts of 10 ns each (equivalent to 100 ns) for each test peptide using MDGEN, and the script will output the wall-clock time taken.\n\n3. Analyze the MDGEN simulation results to evaluate accuracy metrics:\n   ```\n   python -m scripts.analyze_peptide_sim --mddir data/4AA_sims --pdbdir results_mdgen --plot --save --num_workers 1\n   ```\n   This will compute the Jensen-Shannon Divergence (JSD) of torsion distributions, torsion angle relaxation times, and free energy surface comparisons via TICA.\n\n4. The wall-clock time comparison is directly observable from the runtime output of the sim_inference.py script, which shows that MDGEN generates 100 ns-equivalent trajectories in ~60 GPU-seconds, compared to conventional MD which takes ~3 GPU-hours for the same trajectory length (a speedup of 10x-1000x as expected in the experiment)."
}